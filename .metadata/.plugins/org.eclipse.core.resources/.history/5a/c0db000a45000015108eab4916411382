package ca.effpro.learn.hadoop.mr.tpt.exer1;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.WritableComparable;

/**
 * A custom writable class which will be composed of the following items
 * <ol>
 * year
 * <ol>
 * month
 * <ol>
 * infraction code
 * 
 */
public class YearMonthToInfractionWritable implements
		WritableComparable<YearMonthToInfractionWritable> {

	private static final String[] DATE_FORMATS = new String[] { "yyyyMMddHHmmss" };
	private IntWritable year = new IntWritable();
	private IntWritable month = new IntWritable();
	private Text infractionCode = new Text();
	private volatile Date dt;

	public void set(String p$yearMonth, String p$infractionCode) {
		year = new IntWritable(Integer.parseInt(p$yearMonth.substring(0, 4)));
		month = new IntWritable(Integer.parseInt(p$yearMonth.substring(5, 6)));
		infractionCode = new Text(p$infractionCode);

		Calendar c = new GregorianCalendar(year.get(), month.get() - 1, 1, 0,
				0, 0);
		dt = c.getTime();

	}

	public void set(IntWritable p$year, IntWritable p$month,
			Text p$infractionCode) {
		year = p$year;
		month = p$month;
		infractionCode = p$infractionCode;

		Calendar c = new GregorianCalendar(p$year.get(), p$month.get() - 1, 1,
				0, 0, 0);
		dt = c.getTime();
	}

	public int compareTo(YearMonthToInfractionWritable p$writable) {
		int cmp = dt.compareTo(p$writable.dt);
		if (cmp != 0)
			return cmp;

		return infractionCode.compareTo(p$writable.infractionCode);
	}

	public void readFields(DataInput din) throws IOException {
		year.readFields(din);
		month.readFields(din);
		infractionCode.readFields(din);

		// called the set method to initialize the date
		set(year, month, infractionCode);

	}

	public void write(DataOutput dout) throws IOException {
		year.write(dout);
		month.write(dout);
		infractionCode.write(dout);
	}

	public IntWritable getYear() {
		return year;
	}

	public IntWritable getMonth() {
		return month;
	}

	public Text getInfractionCode() {
		return infractionCode;
	}

	@Override
	public boolean equals(Object obj) {
		
if(obj == null) return false;
if((obj instanceof YearMonthToInfractionWritable) == false) return false;
		return super.equals(obj);
	}

	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return super.toString();
	}

}
