package ca.effpro.learn.hadoop.mr.tpt.exer1;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mrunit.mapreduce.MapDriver;
import org.apache.hadoop.mrunit.types.Pair;
import org.junit.Before;
import org.junit.Test;

import ca.effpro.hadoop.mrbasics.old.Redr;

public class YearMonthInfractionMapperTest {

	private static final Log logger = LogFactory
			.getLog(YearMonthInfractionMapperTest.class);

	MapDriver<Text, Text, YearMonthToInfractionWritable, Text> mapDriver;

	@Before
	public void setUp() {
		System.setProperty("hadoop.home.dir",
				"C:\\Dev\\workspace\\lib\\hadoop-2.6.0");
		YearMonthInfractionMapper mapper = new YearMonthInfractionMapper();
		Redr reducer = new Redr();
		mapDriver = MapDriver.newMapDriver(mapper);
	}

	@Test
	public void testMapper() throws IOException {

		String[][][] params = new String[][][] { 
				//set 1
				new String[][] {
						new String[] {"FLV1",
								"***19415,20080627,5,PARK-HWY DRNG PROH TIMES/DAYS,30,0035,NR,1095 ST CLAIR AVE W,,,ON"
								+ "\n"}
								,new String[] {"20080627,5", "30,ON" }
				}
				
				//set 2
		};

		YearMonthToInfractionWritable k2 = new YearMonthToInfractionWritable();
		Text k1, v1, v2;

		String[] k2Params, dataLine;
		List<Pair<YearMonthToInfractionWritable, Text>> outputPairs = new ArrayList<Pair<YearMonthToInfractionWritable, Text>>();
		Pair<YearMonthToInfractionWritable, Text> outputPair;
		int idx = 0;
		
		for (String[][] param : params) {
			
			dataLine = param[0];
			logger.info((idx++) + " => " + StringUtils.join(dataLine, " / "));
			
			k1 = new Text(dataLine[0]);
			v1 = new Text(dataLine[1]);
			
			for(int i=1 ; i<param.length; i++) {
			}
			
			
			

			

			k2Params = param[2].split(",");
			k2.set(k2Params[0], k2Params[1]);
			v2 = new Text(param[3]);

			mapDriver.withInput(k1, v1);
			mapDriver.withOutput(k2, v2);
			mapDriver.runTest();
		}

	}

}
