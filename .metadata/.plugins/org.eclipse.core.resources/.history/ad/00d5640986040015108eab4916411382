package ca.effpro.learn.hadoop.mr.tpt.exer1;

import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.junit.Assert;
import org.junit.Test;

public class YearComparatorTest {
	private static final Log logger = LogFactory
			.getLog(YearPartionerTest.class);

	@Test
	public void test$Compare() {
		
		String[][] params = new String[][]{
			new String[] {"20080108","01","20080108","0"},
			new String[] {"20080108","01","20080208","0"},
			new String[] {"20080108","01","20090108","-1"},
			new String[] {"20080108","01","20070108","1"},
			new String[] {"20080108","01","20060108","2"},
			
		};
		
		
		YearMonthToInfractionWritable w1 = new YearMonthToInfractionWritable();
		YearMonthToInfractionWritable w2 = new YearMonthToInfractionWritable();
		YearGroupComparator groupComparator = new YearGroupComparator();
		YearComparator rawYrComparator = new YearComparator();
		for(String[] param : params) {
			logger.info("=> " + StringUtils.join(param,","));
			
			w1.set(param[0], param[1]);
			w2.set(param[2], param[1]);
			
//			int cmpOut = groupComparator.compare(w1,w2);
//			Assert.assertEquals(param[3], "" + cmpOut);
			
			
			ByteArrayOutputStream baos1 = new ByteArrayOutputStream(); 
            DataOutputStream dos1 = new DataOutputStream(baos1); 
            ByteArrayOutputStream baos2 = new ByteArrayOutputStream(); 
            DataOutputStream dos2 = new DataOutputStream(baos2); 
            try { 
                    w1.write(dos1); 
                    w2.write(dos2);
            } catch (IOException e) { 
                    e.printStackTrace(); 
            } 
            
            byte[] b1 = baos1.toByteArray(); 
            byte[] b2 = baos2.toByteArray(); 
			

            Assert.assertEquals(param[3], "" + rawYrComparator.compare(b1,0,b1.length,b2,0,b2.length));
			
		}
		
	}
}